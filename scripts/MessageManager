public class MessageManager
{
    public static void CacheCommands()
    {
        // Assume AssemblyList holds the assemblies you want to search in
        foreach (var assembly in AssemblyList)
        {
            foreach (Type type in assembly.GetTypes())
            {
                foreach (MethodInfo method in type.GetMethods())
                {
                    if (method.GetCustomAttributes(typeof(CommandAttribute), true).Length > 0)
                    {
                        // Check if the method has the [Command] attribute
                        commandMethods.Add(method.Name, method);
                    }
                }
            }
        }
    }

    public static bool ValidateCommand(string methodName, int connectionId)
    {
        // Validate if the connection ID is active
        if (!activeConnections.Contains(connectionId))
        {
            return false;
        }
        
        // Additional validation like role-based checks could go here
        
        return true;
    }

    public void HandleIncomingCommand(string methodName, int connectionId, object[] parameters)
    {
        if (ValidateCommand(methodName, connectionId))
        {
            MethodInfo methodToExecute = commandMethods[methodName];
            methodToExecute.Invoke(null, parameters);
        }
        else
        {
            // Send an error message back to the client or log it
        }
    }
}
